PROTO_0:
  LOADB R2 1
  FASTCALL1 TYPE R0 [+3]
  MOVE R4 R0
  GETIMPORT R3 K1 [type]
  CALL R3 1 1
  JUMPIFEQKS R3 K2 ["table"] [+5]
  JUMPIFEQKNIL R0 [+2]
  LOADB R2 0 +1
  LOADB R2 1
  FASTCALL2K ASSERT R2 K3 [+4]
  LOADK R3 K3 ["Bad config"]
  GETIMPORT R1 K5 [assert]
  CALL R1 2 0
  MOVE R1 R0
  JUMPIF R1 [+2]
  NEWTABLE R1 0 0
  MOVE R0 R1
  GETTABLEKS R1 R0 K6 ["caseSensitive"]
  JUMPIFNOTEQKNIL R1 [+5]
  LOADB R1 0
  SETTABLEKS R1 R0 K6 ["caseSensitive"]
  JUMP [+12]
  GETTABLEKS R2 R0 K6 ["caseSensitive"]
  FASTCALL1 TYPE R2 [+2]
  GETIMPORT R1 K1 [type]
  CALL R1 1 1
  JUMPIFEQKS R1 K7 ["boolean"] [+5]
  GETIMPORT R1 K9 [error]
  LOADK R2 K10 ["Bad config.caseSensitive"]
  CALL R1 1 0
  GETTABLEKS R2 R0 K12 ["gapLeadingScore"]
  ORK R1 R2 K11 [-0.005]
  SETTABLEKS R1 R0 K12 ["gapLeadingScore"]
  GETTABLEKS R2 R0 K13 ["gapTrailingScore"]
  ORK R1 R2 K11 [-0.005]
  SETTABLEKS R1 R0 K13 ["gapTrailingScore"]
  GETTABLEKS R2 R0 K15 ["gapInnerScore"]
  ORK R1 R2 K14 [-0.01]
  SETTABLEKS R1 R0 K15 ["gapInnerScore"]
  GETTABLEKS R2 R0 K17 ["consecutiveMatchScore"]
  ORK R1 R2 K16 [1]
  SETTABLEKS R1 R0 K17 ["consecutiveMatchScore"]
  GETTABLEKS R2 R0 K19 ["slashMatchScore"]
  ORK R1 R2 K18 [0.9]
  SETTABLEKS R1 R0 K19 ["slashMatchScore"]
  GETTABLEKS R2 R0 K21 ["wordMatchScore"]
  ORK R1 R2 K20 [0.8]
  SETTABLEKS R1 R0 K21 ["wordMatchScore"]
  GETTABLEKS R2 R0 K23 ["capitalMatchScore"]
  ORK R1 R2 K22 [0.7]
  SETTABLEKS R1 R0 K23 ["capitalMatchScore"]
  GETTABLEKS R2 R0 K25 ["dotMatchScore"]
  ORK R1 R2 K24 [0.6]
  SETTABLEKS R1 R0 K25 ["dotMatchScore"]
  GETTABLEKS R2 R0 K27 ["maxMatchLength"]
  ORK R1 R2 K26 [1024]
  SETTABLEKS R1 R0 K27 ["maxMatchLength"]
  RETURN R0 1

PROTO_1:
  LOADB R1 0
  FASTCALL1 TYPE R0 [+3]
  MOVE R3 R0
  GETIMPORT R2 K1 [type]
  CALL R2 1 1
  JUMPIFNOTEQKS R2 K2 ["table"] [+92]
  LOADB R1 0
  GETTABLEKS R3 R0 K3 ["gapLeadingScore"]
  FASTCALL1 TYPE R3 [+2]
  GETIMPORT R2 K1 [type]
  CALL R2 1 1
  JUMPIFNOTEQKS R2 K4 ["number"] [+83]
  LOADB R1 0
  GETTABLEKS R3 R0 K5 ["gapTrailingScore"]
  FASTCALL1 TYPE R3 [+2]
  GETIMPORT R2 K1 [type]
  CALL R2 1 1
  JUMPIFNOTEQKS R2 K4 ["number"] [+74]
  LOADB R1 0
  GETTABLEKS R3 R0 K6 ["gapInnerScore"]
  FASTCALL1 TYPE R3 [+2]
  GETIMPORT R2 K1 [type]
  CALL R2 1 1
  JUMPIFNOTEQKS R2 K4 ["number"] [+65]
  LOADB R1 0
  GETTABLEKS R3 R0 K7 ["consecutiveMatchScore"]
  FASTCALL1 TYPE R3 [+2]
  GETIMPORT R2 K1 [type]
  CALL R2 1 1
  JUMPIFNOTEQKS R2 K4 ["number"] [+56]
  LOADB R1 0
  GETTABLEKS R3 R0 K8 ["slashMatchScore"]
  FASTCALL1 TYPE R3 [+2]
  GETIMPORT R2 K1 [type]
  CALL R2 1 1
  JUMPIFNOTEQKS R2 K4 ["number"] [+47]
  LOADB R1 0
  GETTABLEKS R3 R0 K9 ["wordMatchScore"]
  FASTCALL1 TYPE R3 [+2]
  GETIMPORT R2 K1 [type]
  CALL R2 1 1
  JUMPIFNOTEQKS R2 K4 ["number"] [+38]
  LOADB R1 0
  GETTABLEKS R3 R0 K10 ["capitalMatchScore"]
  FASTCALL1 TYPE R3 [+2]
  GETIMPORT R2 K1 [type]
  CALL R2 1 1
  JUMPIFNOTEQKS R2 K4 ["number"] [+29]
  LOADB R1 0
  GETTABLEKS R3 R0 K11 ["dotMatchScore"]
  FASTCALL1 TYPE R3 [+2]
  GETIMPORT R2 K1 [type]
  CALL R2 1 1
  JUMPIFNOTEQKS R2 K4 ["number"] [+20]
  LOADB R1 0
  GETTABLEKS R3 R0 K12 ["maxMatchLength"]
  FASTCALL1 TYPE R3 [+2]
  GETIMPORT R2 K1 [type]
  CALL R2 1 1
  JUMPIFNOTEQKS R2 K4 ["number"] [+11]
  GETTABLEKS R3 R0 K13 ["caseSensitive"]
  FASTCALL1 TYPE R3 [+2]
  GETIMPORT R2 K1 [type]
  CALL R2 1 1
  JUMPIFEQKS R2 K14 ["boolean"] [+2]
  LOADB R1 0 +1
  LOADB R1 1
  RETURN R1 1

PROTO_2:
  GETTABLEKS R3 R0 K0 ["caseSensitive"]
  JUMPIF R3 [+10]
  GETIMPORT R3 K3 [string.lower]
  MOVE R4 R1
  CALL R3 1 1
  MOVE R1 R3
  GETIMPORT R3 K3 [string.lower]
  MOVE R4 R2
  CALL R3 1 1
  MOVE R2 R3
  LOADN R3 1
  LOADN R6 1
  FASTCALL1 STRING_LEN R1 [+3]
  MOVE R8 R1
  GETIMPORT R7 K5 [string.len]
  CALL R7 1 1
  MOVE R4 R7
  LOADN R5 1
  FORNPREP R4
  GETIMPORT R7 K7 [string.find]
  MOVE R8 R2
  MOVE R11 R6
  MOVE R12 R6
  NAMECALL R9 R1 K8 ["sub"]
  CALL R9 3 1
  MOVE R10 R3
  LOADB R11 1
  CALL R7 4 1
  MOVE R3 R7
  JUMPIF R3 [+2]
  LOADB R7 0
  RETURN R7 1
  ADDK R3 R3 K9 [1]
  FORNLOOP R4
  LOADB R4 1
  RETURN R4 1

PROTO_3:
  GETIMPORT R1 K2 [string.match]
  MOVE R2 R0
  LOADK R3 K3 ["%l"]
  CALL R1 2 -1
  RETURN R1 -1

PROTO_4:
  GETIMPORT R1 K2 [string.match]
  MOVE R2 R0
  LOADK R3 K3 ["%u"]
  CALL R1 2 -1
  RETURN R1 -1

PROTO_5:
  NEWTABLE R2 0 0
  LOADK R3 K0 ["/"]
  LOADN R6 1
  FASTCALL1 STRING_LEN R1 [+3]
  MOVE R8 R1
  GETIMPORT R7 K3 [string.len]
  CALL R7 1 1
  MOVE R4 R7
  LOADN R5 1
  FORNPREP R4
  MOVE R9 R6
  MOVE R10 R6
  NAMECALL R7 R1 K4 ["sub"]
  CALL R7 3 1
  JUMPIFEQKS R3 K0 ["/"] [+3]
  JUMPIFNOTEQKS R3 K5 ["\"] [+5]
  GETTABLEKS R8 R0 K6 ["slashMatchScore"]
  SETTABLE R8 R2 R6
  JUMP [+36]
  JUMPIFEQKS R3 K7 ["-"] [+5]
  JUMPIFEQKS R3 K8 ["_"] [+3]
  JUMPIFNOTEQKS R3 K9 [" "] [+5]
  GETTABLEKS R8 R0 K10 ["wordMatchScore"]
  SETTABLE R8 R2 R6
  JUMP [+26]
  JUMPIFNOTEQKS R3 K11 ["."] [+5]
  GETTABLEKS R8 R0 K12 ["dotMatchScore"]
  SETTABLE R8 R2 R6
  JUMP [+20]
  MOVE R9 R3
  GETIMPORT R10 K14 [string.match]
  MOVE R11 R9
  LOADK R12 K15 ["%l"]
  CALL R10 2 1
  MOVE R8 R10
  JUMPIFNOT R8 [+10]
  GETIMPORT R8 K14 [string.match]
  MOVE R9 R7
  LOADK R10 K16 ["%u"]
  CALL R8 2 1
  JUMPIFNOT R8 [+4]
  GETTABLEKS R8 R0 K17 ["capitalMatchScore"]
  SETTABLE R8 R2 R6
  JUMP [+2]
  LOADN R8 0
  SETTABLE R8 R2 R6
  MOVE R3 R7
  FORNLOOP R4
  RETURN R2 1

PROTO_6:
  GETUPVAL R5 0
  MOVE R6 R0
  MOVE R7 R2
  CALL R5 2 1
  FASTCALL1 STRING_LEN R1 [+3]
  MOVE R7 R1
  GETIMPORT R6 K2 [string.len]
  CALL R6 1 1
  FASTCALL1 STRING_LEN R2 [+3]
  MOVE R8 R2
  GETIMPORT R7 K2 [string.len]
  CALL R7 1 1
  GETTABLEKS R8 R0 K3 ["caseSensitive"]
  JUMPIF R8 [+10]
  GETIMPORT R8 K5 [string.lower]
  MOVE R9 R1
  CALL R8 1 1
  MOVE R1 R8
  GETIMPORT R8 K5 [string.lower]
  MOVE R9 R2
  CALL R8 1 1
  MOVE R2 R8
  NEWTABLE R8 0 0
  LOADN R11 1
  MOVE R9 R7
  LOADN R10 1
  FORNPREP R9
  MOVE R14 R11
  MOVE R15 R11
  NAMECALL R12 R2 K6 ["sub"]
  CALL R12 3 1
  SETTABLE R12 R8 R11
  FORNLOOP R9
  LOADN R11 1
  MOVE R9 R6
  LOADN R10 1
  FORNPREP R9
  NEWTABLE R12 0 0
  SETTABLE R12 R3 R11
  NEWTABLE R12 0 0
  SETTABLE R12 R4 R11
  LOADK R12 K7 [-∞]
  JUMPIFNOTEQ R11 R6 [+4]
  GETTABLEKS R13 R0 K8 ["gapTrailingScore"]
  JUMPIF R13 [+2]
  GETTABLEKS R13 R0 K9 ["gapInnerScore"]
  MOVE R16 R11
  MOVE R17 R11
  NAMECALL R14 R1 K6 ["sub"]
  CALL R14 3 1
  LOADN R17 1
  MOVE R15 R7
  LOADN R16 1
  FORNPREP R15
  GETTABLE R18 R8 R17
  JUMPIFNOTEQ R14 R18 [+48]
  LOADK R18 K7 [-∞]
  JUMPIFNOTEQKN R11 K10 [1] [+8]
  SUBK R20 R17 K10 [1]
  GETTABLEKS R21 R0 K11 ["gapLeadingScore"]
  MUL R19 R20 R21
  GETTABLE R20 R5 R17
  ADD R18 R19 R20
  JUMP [+24]
  LOADN R19 1
  JUMPIFNOTLT R19 R17 [+22]
  SUBK R22 R11 K10 [1]
  GETTABLE R21 R4 R22
  SUBK R22 R17 K10 [1]
  GETTABLE R20 R21 R22
  GETTABLE R21 R5 R17
  ADD R19 R20 R21
  SUBK R23 R11 K10 [1]
  GETTABLE R22 R3 R23
  SUBK R23 R17 K10 [1]
  GETTABLE R21 R22 R23
  GETTABLEKS R22 R0 K12 ["consecutiveMatchScore"]
  ADD R20 R21 R22
  FASTCALL2 MATH_MAX R19 R20 [+5]
  MOVE R22 R19
  MOVE R23 R20
  GETIMPORT R21 K15 [math.max]
  CALL R21 2 1
  MOVE R18 R21
  GETTABLE R19 R3 R11
  SETTABLE R18 R19 R17
  ADD R21 R12 R13
  FASTCALL2 MATH_MAX R18 R21 [+4]
  MOVE R20 R18
  GETIMPORT R19 K15 [math.max]
  CALL R19 2 1
  MOVE R12 R19
  GETTABLE R19 R4 R11
  SETTABLE R12 R19 R17
  JUMP [+6]
  GETTABLE R18 R3 R11
  LOADK R19 K7 [-∞]
  SETTABLE R19 R18 R17
  ADD R12 R12 R13
  GETTABLE R18 R4 R11
  SETTABLE R12 R18 R17
  FORNLOOP R15
  FORNLOOP R9
  RETURN R0 0

PROTO_7:
  GETTABLEKS R3 R0 K0 ["caseSensitive"]
  JUMPIFNOT R3 [+5]
  JUMPIFEQ R1 R2 [+2]
  LOADB R3 0 +1
  LOADB R3 1
  RETURN R3 1
  GETIMPORT R4 K3 [string.lower]
  MOVE R5 R1
  CALL R4 1 1
  GETIMPORT R5 K3 [string.lower]
  MOVE R6 R2
  CALL R5 1 1
  JUMPIFEQ R4 R5 [+2]
  LOADB R3 0 +1
  LOADB R3 1
  RETURN R3 1

PROTO_8:
  FASTCALL1 STRING_LEN R1 [+3]
  MOVE R4 R1
  GETIMPORT R3 K2 [string.len]
  CALL R3 1 1
  FASTCALL1 STRING_LEN R2 [+3]
  MOVE R5 R2
  GETIMPORT R4 K2 [string.len]
  CALL R4 1 1
  JUMPIFEQKN R3 K3 [0] [+9]
  JUMPIFEQKN R4 K3 [0] [+7]
  GETTABLEKS R5 R0 K4 ["maxMatchLength"]
  JUMPIFLT R5 R4 [+3]
  JUMPIFNOTLT R4 R3 [+3]
  LOADK R5 K5 [-∞]
  RETURN R5 1
  GETUPVAL R6 0
  GETTABLEKS R5 R6 K6 ["isPerfectMatch"]
  MOVE R6 R0
  MOVE R7 R1
  MOVE R8 R2
  CALL R5 3 1
  JUMPIFNOT R5 [+2]
  LOADK R5 K7 [∞]
  RETURN R5 1
  NEWTABLE R5 0 0
  NEWTABLE R6 0 0
  GETUPVAL R7 1
  MOVE R8 R0
  MOVE R9 R1
  MOVE R10 R2
  MOVE R11 R5
  MOVE R12 R6
  CALL R7 5 0
  GETTABLE R8 R6 R3
  GETTABLE R7 R8 R4
  RETURN R7 1

PROTO_9:
  FASTCALL1 STRING_LEN R1 [+3]
  MOVE R4 R1
  GETIMPORT R3 K2 [string.len]
  CALL R3 1 1
  FASTCALL1 STRING_LEN R2 [+3]
  MOVE R5 R2
  GETIMPORT R4 K2 [string.len]
  CALL R4 1 1
  JUMPIFEQKN R3 K3 [0] [+9]
  JUMPIFEQKN R4 K3 [0] [+7]
  GETTABLEKS R5 R0 K4 ["maxMatchLength"]
  JUMPIFLT R5 R4 [+3]
  JUMPIFNOTLT R4 R3 [+5]
  NEWTABLE R5 0 0
  LOADK R6 K5 [-∞]
  RETURN R5 2
  GETUPVAL R6 0
  GETTABLEKS R5 R6 K6 ["isPerfectMatch"]
  MOVE R6 R0
  MOVE R7 R1
  MOVE R8 R2
  CALL R5 3 1
  JUMPIFNOT R5 [+11]
  NEWTABLE R5 0 0
  LOADN R8 1
  MOVE R6 R3
  LOADN R7 1
  FORNPREP R6
  SETTABLE R8 R5 R8
  FORNLOOP R6
  MOVE R6 R5
  LOADK R7 K7 [∞]
  RETURN R6 2
  NEWTABLE R5 0 0
  NEWTABLE R6 0 0
  GETUPVAL R7 1
  MOVE R8 R0
  MOVE R9 R1
  MOVE R10 R2
  MOVE R11 R5
  MOVE R12 R6
  CALL R7 5 0
  NEWTABLE R7 0 0
  LOADB R8 0
  MOVE R9 R4
  MOVE R12 R3
  LOADN R10 1
  LOADN R11 255
  FORNPREP R10
  LOADN R13 1
  JUMPIFNOTLE R13 R9 [+37]
  GETTABLE R14 R5 R12
  GETTABLE R13 R14 R9
  JUMPIFEQKN R13 K5 [-∞] [+31]
  JUMPIF R8 [+6]
  GETTABLE R14 R5 R12
  GETTABLE R13 R14 R9
  GETTABLE R15 R6 R12
  GETTABLE R14 R15 R9
  JUMPIFNOTEQ R13 R14 [+24]
  LOADB R13 0
  JUMPIFEQKN R12 K8 [1] [+17]
  LOADB R13 0
  JUMPIFEQKN R9 K8 [1] [+14]
  GETTABLE R15 R6 R12
  GETTABLE R14 R15 R9
  SUBK R18 R12 K8 [1]
  GETTABLE R17 R5 R18
  SUBK R18 R9 K8 [1]
  GETTABLE R16 R17 R18
  GETTABLEKS R17 R0 K9 ["consecutiveMatchScore"]
  ADD R15 R16 R17
  JUMPIFEQ R14 R15 [+2]
  LOADB R13 0 +1
  LOADB R13 1
  MOVE R8 R13
  SETTABLE R9 R7 R12
  SUBK R9 R9 K8 [1]
  JUMP [+2]
  SUBK R9 R9 K8 [1]
  JUMPBACK [-39]
  FORNLOOP R10
  MOVE R10 R7
  GETTABLE R12 R6 R3
  GETTABLE R11 R12 R4
  RETURN R10 2

PROTO_10:
  NEWTABLE R3 0 0
  GETIMPORT R4 K1 [ipairs]
  MOVE R5 R2
  CALL R4 1 3
  FORGPREP_INEXT R4
  GETUPVAL R10 0
  GETTABLEKS R9 R10 K2 ["hasMatch"]
  MOVE R10 R0
  MOVE R11 R1
  MOVE R12 R8
  CALL R9 3 1
  JUMPIFNOT R9 [+20]
  GETUPVAL R10 0
  GETTABLEKS R9 R10 K3 ["positions"]
  MOVE R10 R0
  MOVE R11 R1
  MOVE R12 R8
  CALL R9 3 2
  NEWTABLE R13 0 3
  MOVE R14 R7
  MOVE R15 R9
  MOVE R16 R10
  SETLIST R13 R14 3 [1]
  FASTCALL2 TABLE_INSERT R3 R13 [+4]
  MOVE R12 R3
  GETIMPORT R11 K6 [table.insert]
  CALL R11 2 0
  FORGLOOP R4 2 [inext] [-29]
  RETURN R3 1

PROTO_11:
  LOADK R0 K0 [-∞]
  RETURN R0 1

PROTO_12:
  LOADK R0 K0 [∞]
  RETURN R0 1

PROTO_13:
  GETUPVAL R3 0
  GETTABLEKS R2 R3 K0 ["isFzyConfig"]
  MOVE R3 R0
  CALL R2 1 1
  FASTCALL2K ASSERT R2 K1 [+4]
  LOADK R3 K1 ["Bad config"]
  GETIMPORT R1 K3 [assert]
  CALL R1 2 0
  GETTABLEKS R1 R0 K4 ["maxMatchLength"]
  RETURN R1 1

PROTO_14:
  GETUPVAL R3 0
  GETTABLEKS R2 R3 K0 ["isFzyConfig"]
  MOVE R3 R0
  CALL R2 1 1
  FASTCALL2K ASSERT R2 K1 [+4]
  LOADK R3 K1 ["Bad config"]
  GETIMPORT R1 K3 [assert]
  CALL R1 2 0
  GETTABLEKS R2 R0 K4 ["maxMatchLength"]
  GETTABLEKS R3 R0 K5 ["gapInnerScore"]
  MUL R1 R2 R3
  RETURN R1 1

PROTO_15:
  GETUPVAL R3 0
  GETTABLEKS R2 R3 K0 ["isFzyConfig"]
  MOVE R3 R0
  CALL R2 1 1
  FASTCALL2K ASSERT R2 K1 [+4]
  LOADK R3 K1 ["Bad config"]
  GETIMPORT R1 K3 [assert]
  CALL R1 2 0
  GETTABLEKS R2 R0 K4 ["maxMatchLength"]
  GETTABLEKS R3 R0 K5 ["consecutiveMatchScore"]
  MUL R1 R2 R3
  RETURN R1 1

MAIN:
  PREPVARARGS 0
  NEWTABLE R0 16 0
  DUPCLOSURE R1 K0 [PROTO_0]
  SETTABLEKS R1 R0 K1 ["createConfig"]
  DUPCLOSURE R1 K2 [PROTO_1]
  SETTABLEKS R1 R0 K3 ["isFzyConfig"]
  DUPCLOSURE R1 K4 [PROTO_2]
  SETTABLEKS R1 R0 K5 ["hasMatch"]
  DUPCLOSURE R1 K6 [PROTO_3]
  DUPCLOSURE R2 K7 [PROTO_4]
  DUPCLOSURE R3 K8 [PROTO_5]
  DUPCLOSURE R4 K9 [PROTO_6]
  CAPTURE VAL R3
  DUPCLOSURE R5 K10 [PROTO_7]
  SETTABLEKS R5 R0 K11 ["isPerfectMatch"]
  DUPCLOSURE R5 K12 [PROTO_8]
  CAPTURE VAL R0
  CAPTURE VAL R4
  SETTABLEKS R5 R0 K13 ["score"]
  DUPCLOSURE R5 K14 [PROTO_9]
  CAPTURE VAL R0
  CAPTURE VAL R4
  SETTABLEKS R5 R0 K15 ["positions"]
  DUPCLOSURE R5 K16 [PROTO_10]
  CAPTURE VAL R0
  SETTABLEKS R5 R0 K17 ["filter"]
  DUPCLOSURE R5 K18 [PROTO_11]
  SETTABLEKS R5 R0 K19 ["getMinScore"]
  DUPCLOSURE R5 K20 [PROTO_12]
  SETTABLEKS R5 R0 K21 ["getMaxScore"]
  DUPCLOSURE R5 K22 [PROTO_13]
  CAPTURE VAL R0
  SETTABLEKS R5 R0 K23 ["getMaxLength"]
  DUPCLOSURE R5 K24 [PROTO_14]
  CAPTURE VAL R0
  SETTABLEKS R5 R0 K25 ["getScoreFloor"]
  DUPCLOSURE R5 K26 [PROTO_15]
  CAPTURE VAL R0
  SETTABLEKS R5 R0 K27 ["getScoreCeiling"]
  RETURN R0 1
